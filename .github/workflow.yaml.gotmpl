name: {{ .ProjectPath }}
on:
  pull_request:
    paths:
      - "{{ .ProjectPath }}/**"
      - "!{{ .ProjectPath }}/README.md"
  push:
    branches:
      - main
    paths:
      - "{{ .ProjectPath }}/**"
      - "!{{ .ProjectPath }}/README.md"

      {{- if eq .ProjectType "docker-images" }}
      - "!{{ .ProjectPath }}/container-structure-test.yaml"
      {{- end }}
jobs:
  {{ .WorkflowFilename }}:
    name: {{ .ProjectPath }}
    runs-on: ubuntu-24.04
    container: ghcr.io/damlys/gogcp-devcontainer:0.0.0
    permissions:
      contents: write
      id-token: write

      {{- if eq .ProjectType "docker-images" }}
      packages: write
      {{- end }}
    env:
      {{- if eq .ProjectType "docker-images" }}
      DOCKER_BUILDKIT: 1
      {{- end }}

      {{- if or (eq .ProjectType "terraform-submodules") (eq .ProjectType "terraform-modules") }}
      TF_IN_AUTOMATION: 1
      {{- end }}
    steps:
      - name: git clone
        uses: actions/checkout@v4
      - name: gcloud auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: {{ "${{ secrets.GOOGLE_CREDENTIALS }}" }}
          create_credentials_file: true
          cleanup_credentials: true

      {{- if eq .ProjectType "docker-images" }}
      - name: docker buildx
        uses: docker/setup-buildx-action@v3
      - name: docker auth (Google Artifact Registry)
        run: gcloud auth configure-docker "europe-central2-docker.pkg.dev"
      - name: docker auth (Docker Hub)
        uses: docker/login-action@v3
        with:
          username: {{ "${{ vars.DOCKERHUB_USERNAME }}" }}
          password: {{ "${{ secrets.DOCKERHUB_TOKEN }}" }}
      - name: docker auth (GitHub Packages)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: {{ "${{ github.actor }}" }}
          password: {{ "${{ secrets.GITHUB_TOKEN }}" }}
      - name: build
        run: ./scripts/docker-image build "{{ .ProjectName }}"
      - name: test
        run: ./scripts/docker-image test "{{ .ProjectName }}"
      - if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
        name: pre-publish
        run: ./scripts/docker-image pre-publish "{{ .ProjectName }}"
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: publish
        run: ./scripts/docker-image publish "{{ .ProjectName }}"
      - name: show
        run: ./scripts/docker-image show "{{ .ProjectName }}"
      {{- end }}

      {{- if eq .ProjectType "helm-charts" }}
      - name: helm auth (Google Artifact Registry)
        run: gcloud auth print-access-token | helm registry login --username="oauth2accesstoken" --password-stdin "europe-central2-docker.pkg.dev"
      - name: build
        run: ./scripts/helm-chart build "{{ .ProjectName }}"
      - name: test
        run: ./scripts/helm-chart test "{{ .ProjectName }}"
      - if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
        name: pre-publish
        run: ./scripts/helm-chart pre-publish "{{ .ProjectName }}"
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: publish
        run: ./scripts/helm-chart publish "{{ .ProjectName }}"
      - name: show
        run: ./scripts/helm-chart show "{{ .ProjectName }}"
      {{- end }}

      {{- if or (eq .ProjectType "terraform-submodules") (eq .ProjectType "terraform-modules") }}
      - name: cache
        uses: actions/cache@v4
        with:
          key: {{ .WorkflowFilename }}
          path: |
            {{ .ProjectPath }}/.terraform

            {{- if eq .ProjectType "terraform-submodules" }}
            {{ .ProjectPath }}/.terraform.lock.hcl
            {{- end }}
      {{- end }}

      {{- if eq .ProjectType "terraform-submodules" }}
      - name: build
        run: ./scripts/terraform-submodule build "{{ .ProjectName }}"
      - name: test
        run: ./scripts/terraform-submodule test "{{ .ProjectName }}"
      - if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
        name: pre-publish
        run: ./scripts/terraform-submodule pre-publish "{{ .ProjectName }}"
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: publish
        run: ./scripts/terraform-submodule publish "{{ .ProjectName }}"
      - name: show
        run: ./scripts/terraform-submodule show "{{ .ProjectName }}"
      {{- end }}

      {{- if eq .ProjectType "kubernetes-manifests" }}
      {{- end }}

      {{- if eq .ProjectType "helm-releases" }}
      {{- end }}

      {{- if eq .ProjectType "terraform-modules" }}
      - name: test
        run: ./scripts/terraform-module test "{{ .ProjectName }}"
      - name: fmt check
        run: terraform -chdir="{{ .ProjectPath }}" fmt -check -recursive .
      - name: init
        run: terraform -chdir="{{ .ProjectPath }}" init -input=false
      - name: validate
        run: terraform -chdir="{{ .ProjectPath }}" validate
      - if: github.event_name == 'pull_request' && github.ref == 'refs/heads/main'
        name: plan
        run: terraform -chdir="{{ .ProjectPath }}" plan -input=false
      - if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        name: apply
        run: terraform -chdir="{{ .ProjectPath }}" apply -input=false -auto-approve
      {{- end }}
