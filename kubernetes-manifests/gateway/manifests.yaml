# console.cloud.google.com/net-services/loadbalancing/list/loadBalancers

apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  namespace: kuar-demo
  name: my-gateway
  annotations:
    networking.gke.io/certmap: gogke-test-7-ingress-internet
spec:
  gatewayClassName: gke-l7-global-external-managed # global external Application Load Balancer
  listeners:
    - name: http
      port: 80
      protocol: HTTP
      allowedRoutes:
        kinds:
          - kind: HTTPRoute
        namespaces:
          from: Selector
          selector:
            matchLabels:
              namespace-name: http-redirect
    - name: https
      port: 443
      protocol: HTTPS
      allowedRoutes:
        kinds:
          - kind: HTTPRoute
        namespaces:
          from: All
  addresses:
    - type: NamedAddress
      value: gogke-test-7-ingress-internet

---
apiVersion: networking.gke.io/v1
kind: GCPBackendPolicy
metadata:
  namespace: kuar-demo
  name: my-backend-policy
spec:
  default:
    logging:
      enabled: false
  targetRef:
    group: gateway.networking.k8s.io
    kind: Gateway
    namespace: kuar-demo
    name: my-gateway

---
apiVersion: v1
kind: Namespace
metadata:
  name: http-redirect
  labels:
    namespace-name: http-redirect

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  namespace: http-redirect
  name: http-to-https
spec:
  parentRefs:
    - kind: Gateway
      namespace: kuar-demo
      name: my-gateway
      sectionName: http
  rules:
    - filters:
        - type: RequestRedirect
          requestRedirect:
            scheme: https

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  namespace: kuar-demo
  name: kuard
spec:
  parentRefs:
    - kind: Gateway
      namespace: kuar-demo
      name: my-gateway
      sectionName: https
  hostnames:
    - kuard.gogke-test-7.damlys.pl
  rules:
    - backendRefs:
        - name: kuard-http-server
          port: 80

---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  namespace: kuar-demo
  name: kuard
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        portName: http
        requestPath: /healthy
  targetRef:
    group: ""
    kind: Service
    name: kuard-http-server

---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  namespace: lgtm-grafana
  name: grafana
spec:
  parentRefs:
    - kind: Gateway
      namespace: kuar-demo
      name: my-gateway
      sectionName: https
  hostnames:
    - grafana.gogke-test-7.damlys.pl
  rules:
    - backendRefs:
        - name: grafana-service
          port: 3000

---
apiVersion: networking.gke.io/v1
kind: HealthCheckPolicy
metadata:
  namespace: lgtm-grafana
  name: grafana
spec:
  default:
    config:
      type: HTTP
      httpHealthCheck:
        port: 3000
        requestPath: /api/health
  targetRef:
    group: ""
    kind: Service
    name: grafana-service
